syntax = "proto3";

package yandex.cloud.video.v1;

import "google/protobuf/field_mask.proto";
import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/video/v1/stream_line.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/video/v1;video";
option java_package = "yandex.cloud.api.video.v1";

service StreamLineService {
    rpc Get(GetStreamLineRequest) returns (StreamLine) {}

    rpc List(ListStreamLinesRequest) returns (ListStreamLinesResponse) {}

    rpc Create(CreateStreamLineRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "CreateStreamLineMetadata"
            response: "StreamLine"
        };
    }

    rpc Update(UpdateStreamLineRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "UpdateStreamLineMetadata"
            response: "StreamLine"
        };
    }

    rpc Delete(DeleteStreamLineRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "DeleteStreamLineMetadata"
            response: "google.protobuf.Empty"
        };
    }

    rpc PerformAction(PerformLineActionRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "PerformLineActionMetadata"
            response: "StreamLine"
        };
    }

    rpc GetStreamKey(GetStreamKeyRequest) returns (PushStreamKey) {}

    rpc UpdateStreamKey(UpdateStreamKeyRequest) returns (operation.Operation) {
        option (yandex.cloud.api.operation) = {
            metadata: "UpdateStreamKeyMetadata"
            response: "PushStreamKey"
        };
    }
}

message GetStreamLineRequest {
    string stream_line_id = 1;
}

message ListStreamLinesRequest {
    string channel_id = 1;

    int64 page_size = 100;
    string page_token = 101;

    // By which column the listing should be ordered and in which direction,
    // format is "createdAt desc". "id asc" if omitted.
    // Possible fields: ["id", "title", "createdAt", "updatedAt"]
    // Both snake_case and camelCase are supported for fields.
    string order_by = 102;

    // Filter expression that filters resources listed in the response.
    // Expressions are composed of terms connected by logic operators.
    // Value in quotes: `'` or `"`
    // Example: "key1='value' AND key2='value'"
    // Supported operators: ["AND"].
    // Supported fields: ["title"]
    // Both snake_case and camelCase are supported for fields.
    string filter = 103;
}

message ListStreamLinesResponse {
    repeated StreamLine stream_lines = 1;

    string next_page_token = 100;
}

message CreateStreamLineRequest {
    string channel_id = 1;
    string title = 2;
    string thumbnail_id = 3;

    oneof input_params {
        RTMPPushParams rtmp_push = 1000;
        SRTPushParams srt_push = 1001;
        RTMPPullParams rtmp_pull = 1002;
        SRTPullParams srt_pull = 1003;
        TCPPullParams tcp_pull = 1004;
    }

    oneof line_type_params {
        ManualLineParams manual_line = 2000;
        AutoLineParams auto_line = 2001;
    }
}

message CreateStreamLineMetadata {
    string stream_line_id = 1;
}

message UpdateStreamLineRequest {
    string stream_line_id = 1;
    google.protobuf.FieldMask field_mask = 2;

    string title = 3;
    string thumbnail_id = 4;

    oneof input_params {
        RTMPPushParams rtmp_push = 1000;
        SRTPushParams srt_push = 1001;
        RTMPPullParams rtmp_pull = 1002;
        SRTPullParams srt_pull = 1003;
        TCPPullParams tcp_pull = 1004;
        RTSPPullParams rtsp_pull = 1006;
    }
}

message UpdateStreamLineMetadata {
    string stream_line_id = 1;
}

message DeleteStreamLineRequest {
    string stream_line_id = 1;
}

message DeleteStreamLineMetadata {
    string stream_line_id = 1;
}

message PerformLineActionRequest {
    string stream_line_id = 1;
    oneof action {
        ActivateAction activate = 1000;
        DeactivateAction deactivate = 1001;
    }
}

message PerformLineActionMetadata {
    string stream_line_id = 1;
}

message RTMPPushParams {}

message SRTPushParams {}

message RTMPPullParams {
    string url = 1;
}

message SRTPullParams {
    string url = 1;
}

message TCPPullParams {
    string url = 2;
}

message RTSPPullParams {
    string url = 1;
}

message ManualLineParams {}

message AutoLineParams {}

message ActivateAction {}

message DeactivateAction {}

message GetStreamKeyRequest {
    string stream_line_id = 1;
}

message UpdateStreamKeyRequest {
    string stream_line_id = 1;
}

message UpdateStreamKeyMetadata {
    string stream_line_id = 1;
}
