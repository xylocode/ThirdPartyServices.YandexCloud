syntax = "proto3";

package yandex.cloud.speechsense.v1;

option java_package = "yandex.cloud.api.speechsense.v1";
option java_outer_classname = "TalkProto";
option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/speechsense/v1;speechsense";

import "yandex/cloud/speechsense/v1/audio.proto";

service TalkService {

  // rpc for streaming talk documents. First message should contain Talk related metadata,
  // second - audio metadata, others should contain audio bytes in chunks
  rpc UploadAsStream(stream StreamTalkRequest) returns (UploadTalkResponse);

  // rpc for uploading talk document as single message
  rpc Upload(UploadTalkRequest) returns (UploadTalkResponse);
}

message StreamTalkRequest {
  oneof Event {

    // talk document metadata containing channel id and channel field values
    TalkMetadata metadata = 1;

    // audio metadata or chunk
    AudioStreamingRequest audio = 2;
  }
}

// request to create dialog
message UploadTalkRequest {
  TalkMetadata metadata = 1;

  // audio meta + bytes
  AudioRequest audio = 2;
}

message TalkMetadata {

  // id of connection this talk belongs too
  string connection_id = 1;

  // channel defined fields
  map<string, string> fields = 2;
}

message UploadTalkResponse {

  // id of created talk document
  string talk_id = 1;
}
