syntax = "proto3";

package yandex.cloud.mdb.greenplum.v1;

import "google/protobuf/wrappers.proto";

import "yandex/cloud/validation.proto";


option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/greenplum/v1;greenplum";
option java_package = "yandex.cloud.api.mdb.greenplum.v1";


message PXFConfig {
    // Connection
    google.protobuf.Int64Value connection_timeout = 1 [(value) = "5-600"];
    google.protobuf.Int64Value upload_timeout = 2 [(value) = "5-600"];

    // Thread pool
    google.protobuf.Int64Value max_threads = 3 [(value) = "1-1024"];
    google.protobuf.BoolValue  pool_allow_core_thread_timeout = 4;
    google.protobuf.Int64Value pool_core_size = 5 [(value) = "1-1024"];
    google.protobuf.Int64Value pool_queue_capacity = 6 [(value) = ">=0"];
    google.protobuf.Int64Value pool_max_size = 7 [(value) = "1-1024"];

    // JVM
    google.protobuf.Int64Value xmx = 8[(value) = "64-16384"];
    google.protobuf.Int64Value xms = 9[(value) = "64-16384"];
}

message PXFConfigSet {
    PXFConfig effective_config = 1 [(required) = true];

    // User-defined settings
    PXFConfig user_config = 2;

    // Default configuration
    PXFConfig default_config = 3;
}

// Datasources API

message PXFDatasourceS3 {
    string                    access_key  = 1 [(length) = "<=200"];
    string                    secret_key  = 2 [(length) = "<=200"];
    google.protobuf.BoolValue fast_upload = 3;
    string                    endpoint    = 4 [(length) = "<=200"];
}

message PXFDatasourceJDBC {
    // Matches jdbc.driver
    string driver = 1 [(length) = "<=50"];
    // Matches jdbc.url
    string url    = 2 [(length) = "<=200"];

    // Matches jdbc.user
    string user     = 3 [(length) = "<=200"];
    // Matches jdbc.password
    string password = 4 [(length) = "<=200"];

    // Matches jdbc.statement.batchsize
    google.protobuf.Int64Value statement_batch_size = 5 [(value) = "50-1000"];
    // Matches jdbc.statement.fetchsize
    google.protobuf.Int64Value statement_fetch_size = 6 [(value) = "50-10000"];
    // Matches jdbc.statement.querytimeout
    google.protobuf.Int64Value statement_query_timeout = 7 [(value) = "5-600"];

    // Matches jdbc.pool.enabled
    google.protobuf.BoolValue pool_enabled = 8;
    // Matches jdbc.pool.property.maximumpoolsize
    google.protobuf.Int64Value pool_maximum_size = 9 [(value) = "10-200"];
    // Matches jdbc.pool.property.connectiontimeout
    google.protobuf.Int64Value pool_connection_timeout = 10 [(value) = "5000-600000"];
    // Matches jdbc.pool.property.idletimeout
    google.protobuf.Int64Value pool_idle_timeout = 11 [(value) = "5000-600000"];
    // Matches jdbc.pool.property.minimumidle
    google.protobuf.Int64Value pool_minimum_idle = 12 [(value) = "0-200"];
}

message PXFDatasourceCore {
    string default_fs             = 1 [(length) = "<=200"];
    string security_auth_to_local = 2 [(length) = "<=1000"];
}

message PXFDatasourceKerberos {
    google.protobuf.BoolValue enable = 1;
    string primary                   = 2 [(length) = "<=128"];
    string realm                     = 3 [(length) = "<=1000"];
    repeated string kdc_servers      = 4 [(size) = "<=200", (length) = "1-200"];
    string admin_server              = 5 [(length) = "<=128"];
    string default_domain            = 6 [(length) = "<=128"];
    string keytab_base64             = 7 [(pattern) = "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$", (length) = "<=65536"];
}

message PXFDatasourceHDFSDfsNamenode {
    string rpc_address         = 1 [(length) = "<=1000"];
    string service_rpc_address = 2 [(length) = "<=1000"];
    string http_address        = 3 [(length) = "<=1000"];
    string https_address       = 4 [(length) = "<=1000"];
}

message PXFDatasourceHDFSDfs {
    google.protobuf.BoolValue ha_automatic_failover_enabled = 1;
    google.protobuf.BoolValue block_access_token_enabled    = 2;
    google.protobuf.BoolValue use_datanode_hostname         = 3;

    map<string, PXFDatasourceHDFSDfsNamenode> namenodes = 4 [(size) = "<=10000"];
}

message PXFDatasourceHDFSYarnHaRm {
    string resourcemanager_address                  = 1;
    string resourcemanager_scheduler_address        = 2;
    string resourcemanager_resource_tracker_address = 3;
    string resourcemanager_admin_address            = 4;
    string resourcemanager_webapp_address           = 5;
    string resourcemanager_webapp_https_address     = 6;
}

message PXFDatasourceHDFSYarn {
    google.protobuf.BoolValue   resourcemanager_ha_enabled                = 1;
    google.protobuf.BoolValue   resourcemanager_ha_auto_failover_enabled  = 2;
    google.protobuf.BoolValue   resourcemanager_ha_auto_failover_embedded = 3;
    string                      resourcemanager_cluster_id                = 4 [(length) = "<=1000"];

    map<string, PXFDatasourceHDFSYarnHaRm> ha_rm = 5 [(size) = "<=10000"];
}

message PXFDatasourceHDFS {
    PXFDatasourceCore     core     = 1;
    PXFDatasourceKerberos kerberos = 2;

    google.protobuf.BoolValue   user_impersonation      = 3;
    string                      username                = 4 [(length) = "<=128"];
    google.protobuf.Int64Value  sasl_connection_retries = 5 [(value) = "1-50"];
    repeated string             zk_hosts                = 6 [(size) = "<=200", (length) = "1-200"];

    PXFDatasourceHDFSDfs  dfs  = 7;
    PXFDatasourceHDFSYarn yarn = 8;
}

message PXFDatasourceHive {
    PXFDatasourceCore     core     = 1;
    PXFDatasourceKerberos kerberos = 2;

    google.protobuf.BoolValue   user_impersonation      = 3;
    string                      username                = 4 [(length) = "<=128"];
    google.protobuf.Int64Value  sasl_connection_retries = 5 [(value) = "1-50"];
    repeated string             zk_hosts                = 6 [(size) = "<=200", (length) = "1-200"];

    google.protobuf.BoolValue   ppd                          = 7;
    repeated string             metastore_uris               = 8 [(size) = "<=200", (length) = "1-200"];
    string                      metastore_kerberos_principal = 9 [(length) = "<=1000"];
    string                      auth_kerberos_principal      = 10 [(length) = "<=1000"];
}

message PXFDatasource {
    string name = 1 [(required) = true, (length) = "3-200"];
    oneof settings {
        PXFDatasourceS3   s3   = 2;
        PXFDatasourceJDBC jdbc = 3;
        PXFDatasourceHDFS hdfs = 4;
        PXFDatasourceHive hive = 5;
    }
}
